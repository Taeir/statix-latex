\usepackage{tikz}
\usetikzlibrary{bending,arrows,arrows.meta,shapes,positioning,fit}

\makeatletter

\newcommand{\fontsizeg}{}

%% Shapes

\newcommand{\sg@occnodeshape}{draw,shape=rectangle}
\newcommand{\sg@scopenodeshape}{draw,shape=circle}
\newcommand{\sg@varscopenodeshape}{draw,dashed,shape=circle}
\newcommand{\sg@termnodeshape}{draw,shape=rectangle}
\newcommand{\sg@typenodeshape}{draw,shape=rectangle}
\newcommand{\sg@directedgeshape}{-{Triangle[length=.5em,angle'=45]}}
\newcommand{\sg@namededgeshape}{-{Triangle[length=.5em,angle'=45,open]}}
\newcommand{\sg@typeedgeshape}{-{Square[length=.35em]}}
\newcommand{\sg@termedgeshape}{-{To[length=.35em,angle'=45,flex']}}
\newcommand{\sg@resstepshape}{dashed,-{To[length=.5em,angle'=45]}}

%% Inline math commands

\newcommand{\sg@tarrow@impl}[2]{%
  \mathrel{\tikz[baseline=-0.55ex,%
                 thelabel/.style={inner sep=0,pos=.35,text depth=.7em},
                 ]{%
    \draw[line width=.7pt,#1] (0,0) to node[thelabel] {\scalebox{0.6}{$#2$}} (1.5em,0);
  }}%
}
\newcommand{\sg@tarrow}[2]{\begingroup\edef\sg@temp{\endgroup\noexpand\sg@tarrow@impl{#1}{\noexpand#2}}\sg@temp}

\newcommand{\sg@tshortarrow@impl}[2]{%
  \mathrel{\tikz[baseline=-0.55ex,%
                 thelabel/.style={inner sep=0,pos=.35,text depth=.7em},
                 ]{%
    \draw[line width=.7pt,#1] (0,0) to node[thelabel] {\scalebox{0.6}{$#2$}} (1em,0);
  }}%
}
\newcommand{\sg@tshortarrow}[2]{\begingroup\edef\sg@temp{\endgroup\noexpand\sg@tshortarrow@impl{#1}{\noexpand#2}}\sg@temp}

%% Inline graphical commands

\newcommand{\sg@garrow@impl}[3][1.5em]{%
  \tikz[baseline=-0.55ex,
        font={\fontsizeg\sffamily},
        thelabel/.style={inner sep=0,pos=.35,text depth=.7em},
       ]{
    \draw[line width=.7pt,#2] (0,0) to node[thelabel] {\scalebox{0.6}{#3}} (#1,0);
  }%
}
\newcommand{\sg@garrow}[2]{\begingroup\edef\sg@temp{\endgroup\noexpand\sg@garrow@impl{#1}{\noexpand#2}}\sg@temp}

\newcommand{\sg@node@impl}[2]{%
  \tikz[baseline=-0.55ex,
        font=\fontsizeg,
        thenode/.style = {minimum width=1.3em, minimum height=1.3em,
                          inner xsep=.1em, inner ysep=0, outer sep=0,
                          text depth=0, text height=.5em},
       ]{
    \node[thenode,#1] (enclosing) {\smash{$#2$}};
  }%
}
\newcommand{\sg@node}[2]{\begingroup\edef\sg@temp{\endgroup\noexpand\sg@node@impl{#1}{\noexpand#2}}\sg@temp}

%% duplicated because expansion messed up of \occg{\id{x}}{i} with regular \sg@node@impl
\newcommand{\sg@occnode@impl}[4]{%
  \tikz[baseline=-0.55ex,
        font=\fontsizeg,
        thenode/.style = {minimum width=1.3em, minimum height=1.3em,
                          inner xsep=.1em, inner ysep=0, outer sep=0,
                          text depth=0, text height=.5em},
       ]{
    \node[thenode,#1] (enclosing) {\smash{$\occt[#2]{#3}{#4}$}};
  }%
}
\newcommand{\sg@occnode}[4]{\begingroup\edef\sg@temp{\endgroup\noexpand\sg@occnode@impl{#1}{\noexpand#2}{\noexpand#3}{\noexpand#4}}\sg@temp}

%% arrows inspired by https://tex.stackexchange.com/a/9926
\newbox\xreaches@label
\newcommand{\xreaches}[1]{%
  \setbox\xreaches@label=\hbox{\ensuremath{\scriptscriptstyle #1}}%
  \pgfmathsetlengthmacro{\xreaches@len}{\wd\xreaches@label+1.10em}%
  \mathrel{\tikz [baseline=-.55ex]
                 \draw[>={Straight Barb[scale=.8]},-{>>}] (0,0) -- node[xshift=-.2em,above=-2pt] {\box\xreaches@label}
                       (\xreaches@len,0);}}


\newbox\xresolvesto@label
\newcommand{\xresolvesto}[1]{%
  \setbox\xresolvesto@label=\hbox{\ensuremath{\scriptscriptstyle #1}}%
  \pgfmathsetlengthmacro{\xresolvesto@len}{\wd\xresolvesto@label+0.75em}%
  \mathrel{\tikz [baseline=-.55ex]
                 \draw[{|[scale=.7]}-{Straight Barb[scale=.7]}] (0,0) -- node[above=-2pt] {\box\xresolvesto@label}
                       (\xresolvesto@len,0);}}

\makeatother

%% Tikz styles

\tikzset{%
  scopegraph/.style = {%
    node distance = 2.5em and 2.5em,
    font = \footnotesize,
    %% node styles
    every node/.style = {draw, minimum size=1.5em},
    scope/.style = {shape=circle},
    var/.style = {dashed},
    varscope/.style = {scope, dashed},
    occurrence/.style = {shape=rectangle},
    decl/.style = {type},
    ref/.style = {occurrence, dashed},
    type/.style = {shape=rectangle},
    superscript label/.style = {},%
    superscript/.style={label={[superscript label,minimum size=0,inner sep=.2ex]45:{\smaller[2]\textit{##1}}}},%
    %% arrow styles
    direct arrow/.style = {-{Triangle[length=.5em,angle'=60,flex']}},
    decl arrow/.style = {-{Triangle[length=.5em,angle'=60,flex']}},
    ref arrow/.style = {-{Triangle[length=.5em,angle'=60,flex']}},
    named arrow/.style = {-{Triangle[length=.5em,angle'=60,open,flex']}},
    importref arrow/.style = {{Triangle[length=.5em,angle'=60,flex']}-{Triangle[length=.5em,angle'=60,open,flex']}},
    resolve arrow/.style = {-{To[length=.5em,angle'=60,flex']}},
    type arrow/.style = {-{Square[length=.35em,flex']}},
    term arrow/.style = {densely dotted,-{To[length=.35em,angle'=45,flex']}},
    %% edge styles
    every edge/.style = {draw, direct arrow},
    import/.style = {named arrow},
    export/.style = {named arrow},
    type/.style = {type arrow},
    term/.style = {term arrow},
    importref/.style = {importref arrow},%
    ref/.style = {dashed, ref arrow, shorten <= .2em, shorten >= .2em},%
    ref step/.style = {dashed, {}-{}},%
    resolve/.style = {dashed, resolve arrow, shorten <= .2em, shorten >= .2em},%
    resolve step/.style = {dashed, {}-{}},%
    lbl/.style = {edge node = {node[draw=none,fill=white,minimum size=0,inner sep=.2ex, pos=.45,font=\scriptsize] {\textsf{##1}}}},%
  },%
}